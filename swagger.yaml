swagger: "2.0"
info:
  description: "This is the API documentation for the leaderboard API."
  version: "1.0.0"
  title: "Leaderboard API"
host: "localhost:5000"
basePath: "/"
tags:
- name: "users"
  description: "Operations about users"
- name: "leaderboard"
  description: "Operations about leaderboard"
schemes:
- "http"
paths:
  /users:
    post:
      summary: Create a new user
      description: Creates a new user and uploads a photo to S3.
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "name"
        in: "formData"
        type: "string"
        description: "Name of the new user"
        required: true
      - name: "age"
        in: "formData"
        type: "integer"
        description: "Age of the new user"
      - name: "address"
        in: "formData"
        type: "string"
        description: "Address of the new user"
      - name: "photo"
        in: "formData"
        type: "file"
        description: "Photo of the new user"
      responses:
        '201':
          description: User created successfully
          schema:
            type: object
            properties:
              user_id:
                type: string
                description: The ID of the created user
                example: "60c72b2f9f1b2c0015b8f1b0"
        '400':
          description: Bad Request
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Missing mandatory fields: 'name'"
        '500':
          description: Internal Server Error
          schema:
            type: object
            properties:
              error:
                type: string
                example: Internal Server Error

  /users/{user_id}:
    get:
      tags:
      - "users"
      summary: "Get user details"
      operationId: "getUserById"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "User details"
        404:
          description: "User not found"
    delete:
      tags:
      - "users"
      summary: "Delete a user"
      operationId: "deleteUser"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "User deleted"
        404:
          description: "User not found"
  /users/{user_id}/points:
    patch:
      tags:
      - "users"
      summary: "Update user points"
      operationId: "updateUserPoints"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Points increment object"
        required: true
        schema:
          type: "object"
          properties:
            increment:
              type: "integer"
      responses:
        200:
          description: "Points updated"
        404:
          description: "User not found"
  /leaderboard:
    get:
      tags:
      - "leaderboard"
      summary: "Get the leaderboard"
      operationId: "getLeaderboard"
      produces:
      - "application/json"
      responses:
        200:
          description: "Leaderboard"
  /grouped_by_points:
    get:
      summary: Get users grouped by points
      description: Returns users grouped by points along with the average age.
      responses:
        '200':
          description: Users grouped by points
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    names:
                      type: array
                      items:
                        type: string
                      description: List of user names
                      example: ["Emma"]
                    average_age:
                      type: number
                      description: Average age of the users
                      example: 18
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Internal Server Error

definitions:
  User:
    type: "object"
    required:
    - "name"
    - "age"
    - "address"
    - "photo_url"
    properties:
      name:
        type: "string"
      age:
        type: "integer"
      address:
        type: "string"
      photo_url:
        type: "string"
